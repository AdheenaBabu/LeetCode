class Solution {
public:
    int maxCoins(vector<int>& nums) {
        vector<vector<int>> dp(nums.size(),vector<int>(nums.size(),0));
        int left, right, lastBurstCoins, total, maxCoin = INT_MIN;
        for(int l=0; l<nums.size(); l++){
            for(int i=0, j=l; j<nums.size(); i++,j++){
                maxCoin = INT_MIN;
                for(int k=i; k<=j; k++){
                    left = k==i? 0 : dp[i][k-1];
                    right = k==j? 0 : dp[k+1][j];
                    lastBurstCoins = nums[k];
                    if(i>0){
                        lastBurstCoins *= nums[i-1];
                    }
                    if(j<nums.size()-1){
                        lastBurstCoins *= nums[j+1];
                    }
                    total = left + right + lastBurstCoins;
                    maxCoin = max(maxCoin,total);
                }
                dp[i][j] = maxCoin;
            }
        }
        return dp[0][nums.size()-1];
    }
};