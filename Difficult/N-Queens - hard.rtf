{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
public:\
    vector<vector<string>> solveNQueens(int n) \{\
        vector<vector<string>> ansBoards;\
        vector<string> board(n, string(n, '.'));\
        solve(ansBoards, board, 0, n);\
        return ansBoards;\
    \}\
    void solve(vector<vector<string>> &ansBoards, vector<string>& board, int col, int &n)\{\
        if(col==n)\{\
            ansBoards.push_back(board);\
            return;\
        \}\
        for(int i=0; i<n; i++)\{\
            if(validPlacement(board, i, col, n))\{\
                board[i][col] = 'Q';\
                solve(ansBoards, board, col+1, n);\
                board[i][col] = '.';\
            \}\
        \}\
    \}\
    bool validPlacement(vector<string>& board, int row, int col, int &n)\{\
        for(int i=0; i<col; i++)\{\
            if(board[row][i]=='Q')\
                return false;\
        \}\
        for(int i=row-1, j=col-1; i>=0 && j>=0; i--, j--)\{\
            if(board[i][j]=='Q')\
                return false;\
        \}\
        for(int i=row+1, j=col-1; i<n && j>=0; i++, j--)\{\
            if(board[i][j]=='Q')\
                return false;\
        \}\
        return true;\
    \}\
\};}