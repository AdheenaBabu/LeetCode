{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
public:\
    void solveSudoku(vector<vector<char>>& board) \{\
        solver(board);\
    \}\
    bool solver(vector<vector<char>> &board)\{\
        for(int i=0; i<board.size(); i++)\{\
            for(int j=0; j<board[0].size(); j++)\{\
                if(board[i][j] == '.')\{\
                    for(int k='1'; k<='9'; k++)\{\
                        if(isValid(board, k, i, j))\{\
                            board[i][j] = k;\
                            if(solver(board))\
                                return true;\
                            else\
                                board[i][j] = '.';\
                        \}\
                    \}\
                    return false;\
                \}\
            \}\
        \}\
        return true;\
    \}\
    bool isValid(vector<vector<char>> &board, char c, int row, int col)\{\
        int subgridrowstart = 3*(row/3);\
        int sudgridcolstart = 3*(col/3);\
        for(int i=0; i<9; i++)\{\
            if(board[row][i] == c)\
                return false;\
            if(board[i][col] ==c)\
                return false;\
            if(board[subgridrowstart + (i/3)][sudgridcolstart + (i%3)] == c)\
                return false;\
        \}\
        return true;\
    \}\
\};}