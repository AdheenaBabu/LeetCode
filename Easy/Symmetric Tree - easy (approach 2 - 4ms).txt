/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isSymmetric(TreeNode* root) {
        return MirrorCheck(root->left, root->right);
    }
    
    bool MirrorCheck(TreeNode* c1, TreeNode* c2){
        if (!c1 && !c2){
            return true;
        }
        if(!c1 || !c2){
            return false;
        }
        return c1->val == c2->val && MirrorCheck(c1->left,c2->right) && MirrorCheck (c1->right,c2->left);
    }
};