{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /**\
 * Definition for singly-linked list.\
 * struct ListNode \{\
 *     int val;\
 *     ListNode *next;\
 *     ListNode() : val(0), next(nullptr) \{\}\
 *     ListNode(int x) : val(x), next(nullptr) \{\}\
 *     ListNode(int x, ListNode *next) : val(x), next(next) \{\}\
 * \};\
 */\
class Solution \{\
public:\
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) \{\
        ListNode* newHead = new ListNode();\
        ListNode* curr = newHead;\
        int carry = 0;\
        while(l1 && l2)\{\
            ListNode* temp = new ListNode();\
            curr->next = temp;\
            curr = temp;\
            int sum = l1->val + l2->val + carry;\
            temp->val = sum%10;\
            carry = sum/10;\
            l1 = l1->next;\
            l2 = l2->next;\
        \}\
        while(l1)\{\
            ListNode* temp = new ListNode();\
            curr->next = temp;\
            curr = temp;\
            int sum = l1->val + carry;\
            temp->val = sum%10;\
            carry = sum/10;\
            l1 = l1->next;\
        \}\
        while(l2)\{\
            ListNode* temp = new ListNode();\
            curr->next = temp;\
            curr = temp;\
            int sum = l2->val + carry;\
            temp->val = sum%10;\
            carry = sum/10;\
            l2 = l2->next;\
        \}\
        if(carry > 0)\{\
            ListNode* temp = new ListNode();\
            curr->next = temp;\
            temp->val = carry;\
        \}\
        return newHead->next;\
    \}\
\};}