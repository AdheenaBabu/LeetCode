{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /**\
 * Definition for a binary tree node.\
 * struct TreeNode \{\
 *     int val;\
 *     TreeNode *left;\
 *     TreeNode *right;\
 *     TreeNode() : val(0), left(nullptr), right(nullptr) \{\}\
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) \{\}\
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) \{\}\
 * \};\
 */\
class Solution \{\
public:\
    bool isCompleteTree(TreeNode* root) \{\
        bool metNull = false;\
        queue<TreeNode*> q;\
        q.push(root);\
        while(!q.empty())\{\
            TreeNode* curr = q.front();\
            q.pop();\
            if(curr == NULL)\
                metNull = true;\
            else\{\
                if(metNull)\
                    return false;\
                q.push(curr->left);\
                q.push(curr->right);\
            \}\
        \}\
        return true;\
    \}\
\};}