{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
public:\
    vector<int> findDuplicates(vector<int>& nums) \{\
        int n = nums.size();\
        vector<int> ans;\
        for(int i = 0; i<n; i++)\{\
            int absnum = abs(nums[i]);\
            int originalnum = nums[absnum-1];\
            nums[absnum-1] *= -1;\
            if(originalnum<0)\{\
                ans.push_back(absnum);\
            \}\
        \}\
        return ans;\
    \}\
\};}