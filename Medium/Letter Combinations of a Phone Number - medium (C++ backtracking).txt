class Solution {
    vector<string> letters = {"","","abc","def","ghi","jkl","mno","pqrs","tuv","wxyz"};
public:
    vector<string> letterCombinations(string digits) {
        vector<string> ans;
        if(digits.length()==0)
            return ans;
        string sub = "";
        findCombinations(ans,digits,sub,0);
        return ans;
    }
    void findCombinations(vector<string> &ans, string &digits, string &sub, int digitIndex){
        if(digitIndex >= digits.length()){
            ans.push_back(sub);
            return;
        }
        string combination = letters[digits[digitIndex] - '0'];
        int combinationCount = combination.length();
        for(int i=0; i<combinationCount; i++){
            sub += combination[i];
            findCombinations(ans,digits,sub,digitIndex+1);
            sub.pop_back();
        }
    }
};