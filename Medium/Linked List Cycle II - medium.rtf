{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /**\
 * Definition for singly-linked list.\
 * struct ListNode \{\
 *     int val;\
 *     ListNode *next;\
 *     ListNode(int x) : val(x), next(NULL) \{\}\
 * \};\
 */\
class Solution \{\
public:\
    ListNode *detectCycle(ListNode *head) \{\
        ListNode* fast = head;\
        ListNode* slow = head;\
        while(fast != NULL && fast->next != NULL)\{\
            fast = fast->next->next;\
            slow = slow->next;\
            if(fast == slow)\{\
                ListNode* curr = head;\
                while(curr != slow)\{\
                    curr = curr->next;\
                    slow = slow->next;\
                \}\
                return curr;\
            \}\
        \}\
        return NULL;\
    \}\
\};}