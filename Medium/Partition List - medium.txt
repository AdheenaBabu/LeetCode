/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* partition(ListNode* head, int x) {
        if (head==NULL)
            return head;
        ListNode* less = head->val < x ? head : NULL;
        ListNode* curr = head;
        while(curr->next!=NULL){
            if((curr->next->val < x) && (curr->val >= x)){
                ListNode* temp = curr->next;
                curr->next = temp->next;
                temp->next = (less == NULL)? head : less->next;
                head = (less == NULL) ? temp : head;
                if(less != NULL)
                    less->next = temp;
                less = temp;
            }
            else if((curr->next->val < x) && (curr->val < x) && less != NULL){
                less = less->next;
                curr = curr->next;
            }
            else{
                curr = curr->next;
            }
        }
        return head;
    }
};