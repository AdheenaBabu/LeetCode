/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    int res=0;
public:
    int pathSum(TreeNode* root, int targetSum) {
        vector<int> list;
        DFS(root,targetSum,list);
        return res;
    }
    void DFS(TreeNode* root, int targetSum, vector<int> list){
        if(root==NULL)
            return;
        list.push_back(root->val);
        
        DFS(root->left,targetSum,list);
        DFS(root->right,targetSum,list);
        
        int sum =0;
        for(int j =list.size()-1; j>=0;j--){
            sum += list[j];
            if(sum==targetSum){
                res++;
            }
        }
    }
};