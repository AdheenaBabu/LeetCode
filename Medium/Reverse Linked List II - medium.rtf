{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /**\
 * Definition for singly-linked list.\
 * struct ListNode \{\
 *     int val;\
 *     ListNode *next;\
 *     ListNode() : val(0), next(nullptr) \{\}\
 *     ListNode(int x) : val(x), next(nullptr) \{\}\
 *     ListNode(int x, ListNode *next) : val(x), next(next) \{\}\
 * \};\
 */\
class Solution \{\
public:\
    ListNode* reverseBetween(ListNode* head, int left, int right) \{\
        ListNode* newHead = new ListNode();\
        newHead->next = head;\
        ListNode* start = newHead;\
        for(int i = 1; i<left; i++)\{\
            start = start->next;\
        \}\
        ListNode* curr = start->next;\
        for(int i=1; i<= right-left; i++)\{\
            ListNode* temp = start->next;\
            start->next = curr->next;\
            curr->next = curr->next->next;\
            start->next->next = temp;\
        \}\
        return newHead->next;\
    \}\
\};}