{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /**\
 * Definition for singly-linked list.\
 * struct ListNode \{\
 *     int val;\
 *     ListNode *next;\
 *     ListNode() : val(0), next(nullptr) \{\}\
 *     ListNode(int x) : val(x), next(nullptr) \{\}\
 *     ListNode(int x, ListNode *next) : val(x), next(next) \{\}\
 * \};\
 */\
class Solution \{\
public:\
    ListNode* sortList(ListNode* head) \{\
        if(head == NULL || head->next == NULL)\
            return head;\
        ListNode* prev = NULL;\
        ListNode* slow = head;\
        ListNode* fast = head;\
        while(fast != NULL && fast->next != NULL)\{\
            prev = slow;\
            slow = slow->next;\
            fast = fast->next->next;\
        \}\
        prev->next = NULL;\
        ListNode* l1 = sortList(head);\
        ListNode* l2 = sortList(slow);\
        return merge(l1, l2);\
    \}\
    ListNode* merge(ListNode* l1, ListNode* l2)\{\
        ListNode* newHead = new ListNode();\
        ListNode* temp = newHead;\
        while(l1 != NULL && l2 != NULL)\{\
            if(l1->val < l2->val)\{\
                temp->next = l1;\
                l1 = l1->next;\
            \}\
            else\{\
                temp->next = l2;\
                l2 = l2->next;\
            \}\
            temp = temp->next;\
        \}\
        if(l1 != NULL)\{\
            temp->next = l1;\
        \}\
        else if(l2 != NULL)\{\
            temp->next = l2;\
        \}\
        return newHead->next;\
    \}\
\};}