class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int,int> map;
        vector<int> ans;
        for (int i : nums){
            map[i] += 1;
        }
        priority_queue<pair<int,int>> pq;
        for (auto it = map.begin(); it!=map.end(); it++){
            pq.push(make_pair(it->second,it->first));
        }
        while(k--){
            ans.push_back(pq.top().second);
            pq.pop();
        }
        return ans;
    }
};